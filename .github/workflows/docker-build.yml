name: Build and Push Docker Image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker tag to build'
        required: true
        default: 'manual'

env:
  REGISTRY: docker.io
  IMAGE_NAME: keithah/mautrix-hostex

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Get build info
      id: build_info
      run: |
        if [ "${{ github.event_name }}" == "release" ]; then
          echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          echo "commit=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          echo "commit=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
        else
          echo "tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          echo "commit=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
        fi
        echo "build_time=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

    - name: Build and push AMD64 image (priority)
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ env.IMAGE_NAME }}:latest-amd64
        build-args: |
          TAG=${{ steps.build_info.outputs.tag }}
          COMMIT=${{ steps.build_info.outputs.commit }}
          BUILD_TIME=${{ steps.build_info.outputs.build_time }}
        cache-from: type=gha,scope=amd64
        cache-to: type=gha,mode=max,scope=amd64

    - name: Build and push ARM64 image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/arm64
        push: true
        tags: ${{ env.IMAGE_NAME }}:latest-arm64
        build-args: |
          TAG=${{ steps.build_info.outputs.tag }}
          COMMIT=${{ steps.build_info.outputs.commit }}
          BUILD_TIME=${{ steps.build_info.outputs.build_time }}
        cache-from: type=gha,scope=arm64
        cache-to: type=gha,mode=max,scope=arm64

    - name: Create and push multi-arch manifest
      run: |
        docker buildx imagetools create -t ${{ env.IMAGE_NAME }}:latest \
          ${{ env.IMAGE_NAME }}:latest-amd64 \
          ${{ env.IMAGE_NAME }}:latest-arm64
        
        # Also create versioned tags if this is a release
        if [ "${{ github.event_name }}" == "release" ]; then
          docker buildx imagetools create -t ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} \
            ${{ env.IMAGE_NAME }}:latest-amd64 \
            ${{ env.IMAGE_NAME }}:latest-arm64
        fi

    - name: Update Docker Hub description
      uses: peter-evans/dockerhub-description@v4
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ env.IMAGE_NAME }}
        short-description: "Matrix bridge for Hostex property management system"
        readme-filepath: ./README.md