# Example configuration for Hostex Matrix Bridge
# Copy this to data/config.yaml and customize for your setup

# Homeserver details
homeserver:
    # The address that this appservice can use to connect to the homeserver.
    address: https://matrix.example.com
    # The domain of the homeserver (for MXIDs, etc).
    domain: example.com
    # What software is the homeserver running?
    # Standard Matrix homeservers like Synapse, Dendrite and Conduit should just use "standard" here.
    software: standard
    # The URL to push real-time bridge status to.
    # If set, the bridge will make POST requests to this URL whenever a user's connection state changes.
    status_endpoint: null
    # Endpoint for reporting per-message status.
    message_send_checkpoint_endpoint: null
    # Does the homeserver support https://github.com/matrix-org/matrix-spec-proposals/pull/2246?
    async_media: false

# Application service host/registration related details
# Changing these values requires regeneration of the registration.
appservice:
    # The address that the homeserver can use to connect to this appservice.
    address: http://mautrix-hostex:29337
    # The hostname and port where this appservice should listen.
    hostname: 0.0.0.0
    port: 29337
    # The unique ID of this appservice.
    id: sh-hostex
    # Username of the appservice bot.
    bot_username: sh-hostexbot
    # Display name and avatar for bot. Set to "remove" to remove display name/avatar, leave empty
    # to leave display name/avatar as-is.
    bot_displayname: Hostex Bridge Bot
    bot_avatar: mxc://maunium.net/NeXNQarUbrlYBiPCpprYsRqr
    # Whether or not to receive ephemeral events via appservice transactions.
    ephemeral_events: true
    # Should incoming events be handled asynchronously?
    # This may be necessary for large public instances with lots of messages going through.
    async_transactions: false

# Database config
database:
    # The database type. "sqlite3-fk-wal" and "postgres" are supported.
    type: sqlite3-fk-wal
    # The database URI.
    #   SQLite: A raw file path is supported, but `file:<path>?_txlock=immediate` is recommended.
    #           https://github.com/mattn/go-sqlite3#connection-string
    #   Postgres: Connection string. For example, postgres://user:password@host/database?sslmode=disable
    #             To connect via Unix socket, use something like postgres:///dbname?host=/var/run/postgresql
    uri: file:mautrix-hostex.db?_txlock=immediate
    # Maximum number of connections. Mostly relevant for Postgres.
    max_open_conns: 20
    max_idle_conns: 2
    # Maximum connection idle time and lifetime before they're closed. Disabled if null.
    # Parsed with https://pkg.go.dev/time#ParseDuration
    max_conn_idle_time: null
    max_conn_lifetime: null

# Homeserver websocket settings.
websocket:
    # Whether or not websocket is enabled.
    enabled: false
    # Path prefix to listen on.
    path: /websocket
    # Ping interval in seconds.
    ping_interval: 0

# Settings for provisioning API
provisioning:
    # Whether or not the provisioning API should be enabled.
    enabled: true
    # The prefix to use in the provisioning API endpoints.
    prefix: /_matrix/provision
    # The shared secret to authorize users of the API.
    # Set to "generate" to generate and save a new token.
    shared_secret: generate

# Settings for enabling double puppeting
double_puppet:
    # Servers to always allow double puppeting on
    servers: {}
    # Allow using double puppeting from any server with a valid client .well-known file.
    allow_discovery: false
    # Shared secrets for automatic double puppeting.
    secrets: {}

# End-to-bridge encryption support options.
encryption:
    # Allow encryption, work in group chat rooms with e2ee enabled
    allow: false
    # Default to encryption, force-enable encryption in all portals the bridge creates
    # This will cause the bridge bot to be in private chats for the encryption to work properly.
    default: false
    # Whether to use MSC2409/MSC3202 instead of /sync long polling for receiving encryption-related data.
    appservice: false
    # Require encryption, drop any unencrypted messages.
    require: false
    # Enable key sharing? This uses a modified version of the key sharing from the e2be library,
    # which is not compatible with the MSC2399 implementation in Element Android/iOS.
    allow_key_sharing: false
    # Options for deleting megolm sessions from the bridge.
    delete_keys:
        # Beeper-specific: delete outbound sessions when hungryserv confirms
        # that the user has uploaded the key to key backup.
        delete_outbound_on_ack: false
        # Don't store outbound sessions in the inbound table.
        dont_store_outbound: false
        # Ratchet megolm sessions forward after decrypting messages.
        ratchet_on_decrypt: false
        # Delete fully used keys (index >= max_messages) after decrypting messages.
        delete_fully_used_on_decrypt: false
        # Delete previous megolm sessions from same device when receiving a new one.
        delete_prev_on_new_session: false
        # Delete megolm sessions received from a device when the device is deleted.
        delete_on_device_delete: false
        # Periodically delete megolm sessions when 2x max_age has passed since receiving them.
        periodically_delete_expired: false
        # Delete inbound megolm sessions that don't have the receive_key set (i.e. don't have key backup).
        delete_outdated_inbound: false
    # What level of device verification should be required from users?
    #
    # Valid levels:
    #   unverified - Send keys to all device in the room.
    #   cross-signed-untrusted - Require valid cross-signing, but allow self-signed master keys.
    #   cross-signed-tofu - Require valid cross-signing, trust master keys on first use (and reject changes).
    #   cross-signed-verified - Require valid cross-signing, plus a valid user signature from the bridge bot.
    #                            Note that creating user signatures from the bridge bot is not currently possible.
    #   verified - Require manual per-device verification
    #              (currently only possible by modifying the `trust` column in the `crypto_device` database table).
    verification_levels:
        # Minimum level for which the bridge should send keys to when bridging messages from Telegram to Matrix.
        receive: unverified
        # Minimum level that the bridge should accept for incoming Matrix messages.
        send: unverified
        # Minimum level that the bridge should require for accepting key requests.
        share: cross-signed-tofu
    # Options for Megolm room key rotation. These options allow you to
    # configure the m.room.encryption event content. See:
    # https://spec.matrix.org/v1.3/client-server-api/#mroomencryption
    rotation:
        # Enable custom Megolm room key rotation settings. Note that these
        # settings will only apply to rooms created after this option is
        # set.
        enable_custom: false
        # The maximum number of milliseconds a session should be used
        # before changing it. The Matrix spec recommends 604800000 (a week).
        # Set to null to disable rotation by time.
        milliseconds: 604800000
        # The maximum number of messages that should be sent with a given a
        # session before changing it. The Matrix spec recommends 100.
        # Set to null to disable rotation by messages.
        messages: 100

# Settings for converting location messages
location:
    # Format to send location messages in. Options:
    # - m.location: Plain Matrix location messages (default)
    # - org.matrix.msc3488.location: MSC3488 location messages (with fallback to plain)
    # - org.matrix.msc3488.asset: MSC3488 asset messages (with fallback to plain)
    format: m.location

# Logging config. See https://github.com/tulir/zeroconfig for details.
logging:
    min_level: debug
    writers:
    - type: stdout
      format: pretty-colored
    - type: file
      format: json
      filename: ./logs/bridge.log
      max_size: 100
      max_backups: 10
      compress: true

# Network-specific configuration
network:
    # Hostex API configuration
    hostex_api_url: https://api.hostex.io/v3
    # Admin user to receive startup notifications
    admin_user: "@admin:example.com"